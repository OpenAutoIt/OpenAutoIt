name: MacOS

on:
  push:
    paths:
      # Workflow file itself
      - '.github/workflows/MacOS.yml'
      # C++ files
      - '**.cpp'
      - '**.hpp'
      # CMake files
      - '**.cmake'
      - '**.txt'
      # Script files
      - '**.sh'
      # external libraries
      - 'external/**'
    tags:
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    branches:
      - main
      - develop
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.head_ref || github.run_number }}-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  Build:
    runs-on: macos-12

    strategy:
      fail-fast: false

      matrix:
        cfg:
          # gcc-12
          - { compiler: g++, compiler_version: "12" }
          # AppleClang 13.4.1
          - { compiler: clang++, compiler_version: "13.4.1" }

        build_type:
          - "Debug"
          - "RelWithDebInfo"
          # TODO: Fix the linker error for release builds
          #- "Release"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Environment
        run: external/Phi/scripts/ci/SetupEnvironment.sh

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}-${{ matrix.cfg.compiler }}-${{ matrix.cfg.compiler_version }}

      - name: Setup XCode
        if: matrix.cfg.compiler == 'clang++'
        uses: maxim-lobanov/setup-xcode@v1.5.1
        with:
          xcode-version: ${{ matrix.cfg.compiler_version }}

      - name: Install ninja
        run: brew install ninja

      - name: Install
        run: |
          if [ "${{ matrix.cfg.compiler }}" = "g++" ]; then
            brew install gcc@${{ matrix.cfg.compiler_version }}
            echo "CC=gcc-${{ matrix.cfg.compiler_version }}" >> $GITHUB_ENV
            echo "CXX=g++-${{ matrix.cfg.compiler_version }}" >> $GITHUB_ENV
          elif [ "${{ matrix.cfg.compiler}}" = "clang++" ]; then
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          fi

      - name: Configure build directory
        run: |
          mkdir build -p
          cd build

          cmake -DCMAKE_BUILD_TYPE:STRING=${{ matrix.build_type }} ..

      - name: Build
        working-directory: ./build
        run: cmake --build . --config ${{ matrix.build_type }}

      - name: Run tests
        working-directory: ./build
        run: ctest . -C ${{ matrix.build_type }}
