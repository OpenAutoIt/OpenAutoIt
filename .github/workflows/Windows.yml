name: Windows

on:
  push:
    paths:
      # Workflow file itself
      - '.github/workflows/Windows.yml'
      # C++ files
      - '**.cpp'
      - '**.hpp'
      # CMake files
      - '**.cmake'
      - '**.txt'
      # Script files
      - '**.sh'
      # external libraries
      - 'external/**'
    tags:
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    branches:
      - main
      - develop
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.head_ref || github.run_number }}-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

# Default windows to use bash
defaults:
  run:
    shell: bash

jobs:
  Build:
    runs-on: windows-2022

    strategy:
      fail-fast: false

      matrix:
        compiler:
          - cl
          - g++
          - clang++

        build_type:
          - "Debug"
          - "RelWithDebInfo"
          - "Release"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Environment
        run: external/Phi/scripts/ci/SetupEnvironment.sh

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}-${{ matrix.compiler }}
          variant: sccache

      - name: Install
        shell: powershell
        run: |
          # Install scoop
          iwr -useb get.scoop.sh -outfile 'install.ps1'
          # Required since CI runner is admin
          # See https://github.com/ScoopInstaller/Install#for-admin
          .\install.ps1 -RunAsAdmin

          # Install required compilers
          if ("${{ matrix.compiler }}".StartsWith("clang")) {
            # Clang
            scoop install llvm --global
            echo "CXX=${{ matrix.compiler }}" >> $GITHUB_ENV
            echo "C:\ProgramData\scoop\apps\llvm\current\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          }
          elseif ("${{ matrix.compiler }}" -eq "g++") {
            # GCC
            scoop install gcc --global
            echo "CXX=${{ matrix.compiler }}" >> $GITHUB_ENV
            echo "C:\ProgramData\scoop\apps\gcc\current\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          }

          scoop install ninja --global
          echo "C:\ProgramData\scoop\apps\ninja\current" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Setup msvc dev
        if: matrix.compiler == 'cl'
        uses: ilammy/msvc-dev-cmd@v1.11.0

      - name: Configure build directory
        run: |
          mkdir build -p
          cd build

          cmake .. -DCMAKE_BUILD_TYPE:STRING=${{ matrix.build_type }}

      - name: Build
        working-directory: ./build
        run: cmake --build . --config ${{ matrix.build_type }}

      - name: Run tests
        working-directory: ./build
        run: ctest . -C ${{ matrix.build_type }}
