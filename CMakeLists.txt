# OpenAutoIt

cmake_minimum_required(VERSION 3.10.2)

# Set version
set(OPENAUT_VERSION_MAJOR 0)
set(OPENAUT_VERSION_MINOR 1)
set(OPENAUT_VERSION_PATCH 0)

# Get git info
execute_process(COMMAND git log --format="%H" -n 1 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} OUTPUT_VARIABLE OPENAUT_GIT_SHA_FULL  OUTPUT_STRIP_TRAILING_WHITESPACE)
execute_process(COMMAND git log --format="%h" -n 1 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} OUTPUT_VARIABLE OPENAUT_GIT_SHA_SHORT OUTPUT_STRIP_TRAILING_WHITESPACE)
execute_process(COMMAND git branch --show-current  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} OUTPUT_VARIABLE OPENAUT_GIT_BRANCH    OUTPUT_STRIP_TRAILING_WHITESPACE)

# Get uname info
execute_process(COMMAND uname -s -r -m -o OUTPUT_VARIABLE OPENAUT_UNAME OUTPUT_STRIP_TRAILING_WHITESPACE)

# Project
project("OpenAutoIt" LANGUAGES CXX VERSION ${OPENAUT_VERSION_MAJOR}.${OPENAUT_VERSION_MINOR}.${OPENAUT_VERSION_PATCH})

# Dependencies
add_subdirectory(external)

list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/external/Phi/scripts/cmake)

include(StandardProjectSettings)
include(Environment)
include(Testing)

# Set output directories
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Targets
add_subdirectory("OpenAutParser")
